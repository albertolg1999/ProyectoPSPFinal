/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package clienteproyectofinal;

import clases.CodigosUso;
import clases.Comunicacion;
import clases.Seguridad;
import clases.Usuario;
import java.io.IOException;
import java.net.Socket;
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import java.security.PrivateKey;
import java.security.PublicKey;
import javax.crypto.BadPaddingException;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.NoSuchPaddingException;
import javax.crypto.SealedObject;
import javax.swing.JOptionPane;

/**
 *
 * @author disen
 */
public class VentanaUsuario extends javax.swing.JFrame {
    private Socket servidor;
    private PublicKey clavePubAjena;
    private PrivateKey clavePrivPropia;
    private String modo;
    private SealedObject so;
    private VentanaAdministracion va;
    Usuario u;
    /**
     * Creates new form VentanaUsuario
     */
    public VentanaUsuario(Socket servidor, PrivateKey priv, PublicKey pubAjena,String modo,VentanaAdministracion va) {
        initComponents();
        this.servidor = servidor;
        this.clavePrivPropia = priv;
        this.clavePubAjena = pubAjena;
        this.modo=modo;
        this.va=va;
        setLocationRelativeTo(null);
        
        if(modo.equals("modificar")){
            jLabel1.setText("Modificar Usuario");
            jLabel4.setVisible(false);
            jLabel5.setVisible(false);
            pswPass.setVisible(false);
            pswCPass.setVisible(false);
        }
    }
    /**
     * Creates new form VentanaUsuario
     */
    public VentanaUsuario(Socket servidor, PrivateKey priv, PublicKey pubAjena,String modo,VentanaAdministracion va,Usuario u) {
        initComponents();
        this.servidor = servidor;
        this.clavePrivPropia = priv;
        this.clavePubAjena = pubAjena;
        this.modo=modo;
        this.va=va;
        this.u=u;
        setLocationRelativeTo(null);
        
        if(modo.equals("modificar")){
            txtUsuario.setText(u.getName());
            txtEmail.setText(u.getEmail());
            jLabel4.setVisible(false);
            jLabel5.setVisible(false);
            pswPass.setVisible(false);
            pswCPass.setVisible(false);
        }
    }

    public VentanaUsuario() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnAceptar = new javax.swing.JButton();
        txtUsuario = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        pswPass = new javax.swing.JPasswordField();
        pswCPass = new javax.swing.JPasswordField();

        setBackground(new java.awt.Color(102, 255, 51));

        jPanel1.setBackground(new java.awt.Color(102, 255, 0));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Nuevo Usuario");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Usuario:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Email:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Password:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Conf. Password:");

        btnAceptar.setText("Aceptar");
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        txtUsuario.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txtEmail.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        pswPass.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        pswCPass.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(156, 156, 156)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pswCPass, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(36, 36, 36)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)
                            .addComponent(txtUsuario)
                            .addComponent(pswPass))))
                .addGap(109, 109, 109))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(277, 277, 277))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(282, 282, 282))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(pswPass, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(pswCPass, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(btnAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        if(modo.equals("nuevo")){
            String name = txtUsuario.getText();
            String email = txtEmail.getText();
            String pwd = new String(pswPass.getPassword());
            String Confpwd = new String(pswCPass.getPassword());

            try {

                if (!email.isEmpty() && !name.isEmpty() && !pwd.isEmpty()) {
                    if(pwd.equals(Confpwd)){
                        //envio de modo SIGN UP al hilo que escucha en el servidor
                        SealedObject so = Seguridad.cifrar(clavePubAjena, CodigosUso.C_crearUsuario);
                        Comunicacion.enviarObjeto(servidor, so);

                        crearUsuario(name, email);

                        //recibo el codigo de respuesta del servidor
                        so = (SealedObject) Comunicacion.recibirObjeto(servidor);
                        short res = (short) Seguridad.descifrar(clavePrivPropia, so);

                        switch (res) {

                            case CodigosUso.C_Registro_CORRECTO:
                                JOptionPane.showMessageDialog(null, "Usuario registrado con exito");
                                this.dispose();
                                break;

                            case CodigosUso.C_SIGNUP_EMAIL:
                                JOptionPane.showMessageDialog(null, "Este email ya existe en la BD");
                                break;
                        }

                       }
                    else{
                        JOptionPane.showMessageDialog(null, "Las contraseñas no coinciden");
                    }


                } else {
                    JOptionPane.showMessageDialog(null, "Debe rellenar todos los campos");
                }
                
                this.va.res=this.va.obtenerUsuarios();
            
                this.va.cargarTablaUsuarios(this.va.res);
            } catch (NoSuchAlgorithmException | NoSuchPaddingException | InvalidKeyException | IOException
                    | IllegalBlockSizeException | ClassNotFoundException | BadPaddingException ex) {
                ex.printStackTrace();
            }
            }
        else {
            String name = txtUsuario.getText();
            String email = txtEmail.getText();

            try {

                if (!email.isEmpty() && !name.isEmpty() ) {
                    
                        SealedObject so = Seguridad.cifrar(clavePubAjena, CodigosUso.C_modificarUsuario);
                        Comunicacion.enviarObjeto(servidor, so);

                        crearUsuarioModificar(name, email,u.getId());

                        
                        so = (SealedObject) Comunicacion.recibirObjeto(servidor);
                        short res = (short) Seguridad.descifrar(clavePrivPropia, so);

                        switch (res) {

                            case CodigosUso.C_Registro_CORRECTO:
                                JOptionPane.showMessageDialog(null, "Usuario modificado con exito");
                                this.dispose();
                                break;

                            case CodigosUso.C_SIGNUP_EMAIL:
                                JOptionPane.showMessageDialog(null, "Este email ya existe en la BD");
                                break;
                        }

                       
                    


                } else {
                    JOptionPane.showMessageDialog(null, "Debe rellenar todos los campos");
                }
                
                this.va.res=this.va.obtenerUsuarios();
            
                this.va.cargarTablaUsuarios(this.va.res);
            } catch (NoSuchAlgorithmException | NoSuchPaddingException | InvalidKeyException | IOException
                    | IllegalBlockSizeException | ClassNotFoundException | BadPaddingException ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnAceptarActionPerformed

    
    private void crearUsuario(String name, String email) {
        try {
            
            String pwdR = resumirPwd();
            System.out.println(pwdR);
            //Creamos el usuario a registrar en la base de datos
            Usuario user = new Usuario( name, email, pwdR,false);
            System.out.println(user.getPwd());
            so = Seguridad.cifrar(this.clavePubAjena, user);
            Comunicacion.enviarObjeto(servidor, so);
        } catch (NoSuchAlgorithmException | NoSuchPaddingException | InvalidKeyException | IOException | IllegalBlockSizeException ex) {
            ex.printStackTrace();
        }
    }
    
    private void crearUsuarioModificar(String name, String email,int i) {
        try {
            Usuario user = new Usuario( name, email,i);
            so = Seguridad.cifrar(this.clavePubAjena, user);
            Comunicacion.enviarObjeto(servidor, so);
        } catch (NoSuchAlgorithmException | NoSuchPaddingException | InvalidKeyException | IOException | IllegalBlockSizeException ex) {
            ex.printStackTrace();
        }
    }
    
    private String resumirPwd() throws NoSuchAlgorithmException {
        char[] pass = pswPass.getPassword();
        String passStr = new String(pass);
        return new String(Seguridad.resumirPwd(passStr));
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaUsuario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField pswCPass;
    private javax.swing.JPasswordField pswPass;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables
}
